<idea-plugin require-restart="false">
    <id>com.github.davidenkoim.idnamessuggestingplugin</id>
    <name>Id Names Suggesting</name>
    <vendor>davidenkoim</vendor>
    <resource-bundle>messages.IdNamesSuggesting</resource-bundle>
    <!-- Product and plugin compatibility requirements -->
    <!-- https://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html -->

    <description>
        <![CDATA[
      <p>Provides assistance in naming variables.</p>

      <p>To use the <b>Id Names Suggesting</b> tool, press <b>Alt+Enter</b> on a variable and select <b>Suggest variable name</b>.</p>
      ]]>
    </description>

    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.modules.java</depends>
    <extensions defaultExtensionNs="com.intellij">
        <!--    Settings part    -->
        <registryKey key="iren.developer.mode"
                     description="Registry for showing id names suggesting plugin notifications"
                     defaultValue="False" restartRequired="false"/>
        <applicationService serviceImplementation="org.jetbrains.id.names.suggesting.settings.AppSettingsState"/>
        <applicationConfigurable parentId="tools"
                                 instance="org.jetbrains.id.names.suggesting.settings.AppSettingsConfigurable"
                                 id="org.jetbrains.id.names.suggesting.settings.AppSettingsConfigurable"
                                 displayName="IRen Settings"/>
        <!--    End of settings part    -->
        <intentionAction>
            <className>org.jetbrains.id.names.suggesting.impl.SuggestVariableNamesIntention</className>
        </intentionAction>
        <applicationService serviceImplementation="org.jetbrains.id.names.suggesting.ModelStatsService"/>
        <applicationService serviceImplementation="org.jetbrains.id.names.suggesting.ModelManager"/>
        <applicationService serviceImplementation="org.jetbrains.id.names.suggesting.IdNamesSuggestingService"/>
        <applicationService serviceImplementation="org.jetbrains.id.names.suggesting.inspections.variable.PredictionsStorage"/>
        <backgroundPostStartupActivity
                implementation="org.jetbrains.id.names.suggesting.LoadingModelStartupActivity"/>
        <inspectionToolProvider
                implementation="org.jetbrains.id.names.suggesting.inspections.variable.VariableNamesProvider"/>
        <!-- Astrid part-->
        <intentionAction>
            <className>org.jetbrains.astrid.actions.SuggestionIntentionAction</className>
            <category>Suggestions list</category>
            <descriptionDirectoryName>SuggestionIntentionAction</descriptionDirectoryName>
        </intentionAction>

        <inspectionToolProvider implementation="org.jetbrains.astrid.inspections.method.MethodNamesProvider"/>
        <inspectionToolProvider implementation="org.jetbrains.astrid.inspections.ifstatement.IfStatementProvider"/>

        <applicationService serviceImplementation="org.jetbrains.astrid.stats.RenameMethodStatistics"/>
        <!-- End of Astrid part-->
    </extensions>
    <extensions defaultExtensionNs="org.jetbrains.id.names.suggesting">
        <variableNamesContributor
                implementation="org.jetbrains.id.names.suggesting.contributors.ProjectVariableNamesContributor"/>
    </extensions>
    <actions>
        <action id="train.project.id.model" class="org.jetbrains.id.names.suggesting.impl.TrainProjectNGramModelAction"
                text="Train Project Id Model">
            <add-to-group group-id="RefactoringMenu" anchor="last"/>
            <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt shift Z"/>
        </action>
    </actions>
    <extensionPoints>
        <extensionPoint qualifiedName="org.jetbrains.id.names.suggesting.variableNamesContributor"
                        interface="org.jetbrains.id.names.suggesting.api.VariableNamesContributor" dynamic="true"/>
    </extensionPoints>
    <applicationListeners>
        <listener class="org.jetbrains.id.names.suggesting.PluginLoadedListener" topic="com.intellij.ide.plugins.DynamicPluginListener"/>
    </applicationListeners>
</idea-plugin>
