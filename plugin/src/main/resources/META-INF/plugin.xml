<idea-plugin require-restart="true">
    <id>com.github.davidenkoim.idnamessuggestingplugin</id>
    <name>IRen</name>
    <vendor url="https://www.jetbrains.com">JetBrains</vendor>
    <resource-bundle>messages.IRen</resource-bundle>
    <!-- Product and plugin compatibility requirements -->
    <!-- https://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html -->

    <description>
        <![CDATA[
      <p>Provides assistance in variable refactoring.</p>

      <p>This tool replaces default IDE refactoring with the new one
      that will recommend You better variable names with the help of Machine Learning methods.</p>

      <p>To suggest consistent names IRen model has to train on a project in which you are currently working.
      By the default IRen plugin automatically trains/loads model on a startup of the opened project but
      if you want to manually control it you can switch off the corresponding option in the settings
      <b>Tools | IRen</b> and do it by yourself launching <b>Refactor | Train IRen Model</b>.
      Also in the settings you can tune some hyperparameters of the model.</p>

      <p>IRen inspection helps with maintenance of the code and marks all variables which names are not good enough.</p>

      <p>Supported languages:</p>
        <ul>
        <li>Java</li>
        <li>Kotlin</li>
        <li>Python</li>
        </ul>
      ]]>
    </description>

    <depends>com.intellij.modules.platform</depends>
    <depends optional="true" config-file="java.xml">com.intellij.java</depends>
    <depends optional="true" config-file="kotlin.xml">org.jetbrains.kotlin</depends>
    <depends optional="true" config-file="python.xml">com.intellij.modules.python</depends>
    <applicationListeners>
        <listener class="org.jetbrains.iren.application.ProjectOpenCloseListener"
                  topic="com.intellij.openapi.project.ProjectManagerListener"/>
    </applicationListeners>
    <extensions defaultExtensionNs="com.intellij">
        <!--    Settings part    -->
        <registryKey key="iren.verbose.inference"
                     description="Registry for showing IRen plugin notifications with inference statistics"
                     defaultValue="False" restartRequired="false"/>
        <applicationService serviceImplementation="org.jetbrains.iren.settings.AppSettingsState"/>
        <applicationConfigurable parentId="tools"
                                 instance="org.jetbrains.iren.settings.AppSettingsConfigurable"
                                 id="org.jetbrains.iren.settings.AppSettingsConfigurable"
                                 displayName="IRen"/>
        <!--    End of settings part    -->
        <lookup.usageDetails implementation="org.jetbrains.iren.statistics.IRenLookupUsageDescriptor"/>
        <statistics.collectorExtension implementation="org.jetbrains.iren.statistics.IRenCollectorExtension"/>
        <applicationService serviceImplementation="org.jetbrains.iren.services.ModelsSaveTime"/>
        <projectService serviceInterface="org.jetbrains.iren.services.NGramModelsUsabilityService"
                        serviceImplementation="org.jetbrains.iren.services.NGramModelsUsabilityServiceImpl"/>
        <projectService serviceInterface="org.jetbrains.iren.services.NGramModelManager"
                        serviceImplementation="org.jetbrains.iren.services.NGramModelManagerImpl"/>
        <applicationService serviceInterface="org.jetbrains.iren.services.DOBFModelManager"
                            serviceImplementation="org.jetbrains.iren.services.DOBFModelManagerImpl"/>
        <projectService serviceInterface="org.jetbrains.iren.services.IRenSuggestingService"
                        serviceImplementation="org.jetbrains.iren.services.IRenSuggestingServiceImpl"/>
        <projectService serviceImplementation="org.jetbrains.iren.services.ConsistencyChecker"/>
        <projectService serviceInterface="org.jetbrains.iren.services.RenameHistory"
                        serviceImplementation="org.jetbrains.iren.services.RenameHistoryImpl"/>
        <localInspection displayName="Inconsistent variable names"
                         groupBundle="messages.Rename"
                         groupKey="inspection.group.key"
                         shortName="VariableNamesInspection"
                         enabledByDefault="true"
                         level="WARNING"
                         implementationClass="org.jetbrains.iren.inspections.variable.VariableNamesInspection"
                         language=""/>
        <renameHandler implementation="org.jetbrains.iren.rename.IRenVariableInplaceRenameHandler"/>
        <renameHandler implementation="org.jetbrains.iren.rename.IRenMemberInplaceRenameHandler"/>
        <backgroundPostStartupActivity implementation="org.jetbrains.iren.application.ProjectOpenActivity"/>
        <preloadingActivity implementation="org.jetbrains.iren.application.AskPermissionsPreloadingActivity"/>
        <nameSuggestionProvider implementation="org.jetbrains.iren.IRenVariableNameSuggestionProvider" id="iren"
                                order="last"/>
    </extensions>
    <extensions defaultExtensionNs="org.jetbrains.iren">
        <variableNamesContributor
                implementation="org.jetbrains.iren.contributors.ProjectVariableNamesContributor"/>
        <variableNamesContributor
                implementation="org.jetbrains.iren.contributors.DOBFContributor"/>
    </extensions>
    <actions>
        <action id="train.project.iren.model" class="org.jetbrains.iren.impl.TrainProjectNGramModelAction"
                text="Train IRen Model">
            <add-to-group group-id="RefactoringMenu" anchor="last"/>
            <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt shift Z"/>
        </action>
    </actions>
    <extensionPoints>
        <extensionPoint qualifiedName="org.jetbrains.iren.variableNamesContributor"
                        interface="org.jetbrains.iren.VariableNamesContributor" dynamic="true"/>
        <extensionPoint
                interface="org.jetbrains.iren.LanguageSupporter"
                dynamic="true" qualifiedName="org.jetbrains.iren.language.supporter"/>
    </extensionPoints>
    <applicationListeners>
        <listener class="org.jetbrains.iren.application.PluginLoadedListener"
                  topic="com.intellij.ide.plugins.DynamicPluginListener"/>
    </applicationListeners>
</idea-plugin>
